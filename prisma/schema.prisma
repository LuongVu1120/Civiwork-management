generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  username     String   @unique
  email        String   @unique
  password     String
  fullName     String
  role         UserRole @default(USER)
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  tokenVersion Int      @default(0)
}

model Worker {
  id                  String         @id @default(cuid())
  fullName            String
  role                Role
  dailyRateVnd        Int
  monthlyAllowanceVnd Int            @default(0)
  isActive            Boolean        @default(true)
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  attendances         Attendance[]
  expenses            Expense[]
  payrolls            PayrollMonth[]
}

model Project {
  id          String             @id @default(cuid())
  name        String
  clientName  String?
  address     String?
  startDate   DateTime?
  endDate     DateTime?
  notes       String?
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
  attendances Attendance[]
  expenses    Expense[]
  materials   MaterialPurchase[]
  receipts    Receipt[]
}

model Attendance {
  id          String     @id @default(cuid())
  date        DateTime
  projectId   String
  workerId    String
  dayFraction Decimal    @db.Decimal(3, 2)
  meal        MealOption
  notes       String?
  createdAt   DateTime   @default(now())
  project     Project    @relation(fields: [projectId], references: [id])
  worker      Worker     @relation(fields: [workerId], references: [id])

  @@unique([date, projectId, workerId], name: "attendance_unique_per_day")
  @@index([projectId, date])
  @@index([workerId, date])
}

model Receipt {
  id          String   @id @default(cuid())
  projectId   String
  date        DateTime
  amountVnd   Int
  description String?
  milestone   Int?
  createdAt   DateTime @default(now())
  project     Project  @relation(fields: [projectId], references: [id])

  @@index([projectId, date])
}

model Expense {
  id          String            @id @default(cuid())
  projectId   String
  date        DateTime
  category    ExpenseCategory
  amountVnd   Int
  description String?
  workerId    String?
  materialId  String?
  vendorName  String?
  createdAt   DateTime          @default(now())
  material    MaterialPurchase? @relation(fields: [materialId], references: [id])
  project     Project           @relation(fields: [projectId], references: [id])
  worker      Worker?           @relation(fields: [workerId], references: [id])

  @@index([projectId, date])
  @@index([category, date])
}

model MaterialPurchase {
  id           String    @id @default(cuid())
  projectId    String
  date         DateTime
  itemName     String
  unit         String?
  quantity     Decimal?  @db.Decimal(10, 2)
  quantityText String    @default("")
  unitPriceVnd Int
  totalVnd     Int
  supplier     String?
  isActive     Boolean   @default(true)
  createdAt    DateTime  @default(now())
  expenses     Expense[]
  project      Project   @relation(fields: [projectId], references: [id])

  @@index([projectId, date])
}

model Holiday {
  id        String   @id @default(cuid())
  date      DateTime @unique
  name      String
  createdAt DateTime @default(now())
}

model PayrollMonth {
  id             String   @id @default(cuid())
  workerId       String
  year           Int
  month          Int
  totalDays      Decimal  @db.Decimal(5, 2)
  wageTotalVnd   Int
  mealTotalVnd   Int
  allowanceVnd   Int
  adjustmentsVnd Int      @default(0)
  payableVnd     Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  worker         Worker   @relation(fields: [workerId], references: [id])

  @@unique([workerId, year, month])
}

enum UserRole {
  ADMIN
  MANAGER
  USER
}

enum Role {
  DOI_TRUONG
  THO_XAY
  THO_PHU
  THUE_NGOAI
}

enum MealOption {
  FULL_DAY
  HALF_DAY
  NONE
}

enum ExpenseCategory {
  WAGE
  MEAL
  MATERIAL
  SUBCONTRACT
  TOOLING
  MISC
}
